# yamllint disable rule:line-length
---
name: package

# yamllint disable-line rule:truthy
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  package:
      strategy:
        matrix:
          go-version: [1.18]
          node-version: [16]
          os: [ubuntu-latest, macos-latest]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Install Go
          uses: actions/setup-go@v2
          with:
            go-version: ${{ matrix.go-version }}

        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install linux dependencies
          if: matrix.os == 'ubuntu-latest'
          run: sudo apt-get update -y && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev build-essential pkg-config

        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}

        - name: Install wails
          run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.3.1

        - name: Build package linux
          if: matrix.os == 'ubuntu-latest'
          run: |
            export PATH=$PATH:$(go env GOPATH)/bin
            echo "building on ${{ matrix.os }}"
            echo ${{ env.GITHUB_REF }}
            echo ${{ env.GITHUB_HEAD_REF }}
            ./scripts/build-linux.sh

        - name: Build package macos
          if: matrix.os == 'macos-latest'
          run: |
            ./scripts/build-macos.sh

        - name: Build package windows
          if: matrix.os == 'ubuntu-latest'
          run: |
            export PATH=$PATH:$(go env GOPATH)/bin
            echo "building on ${{ matrix.os }}"
            echo ${{ env.GITHUB_REF }}
            echo ${{ env.GITHUB_HEAD_REF }}
            ./scripts/build-windows.sh

        - name: Upload artifacts macOS
          if: matrix.os == 'macos-latest'
          uses: actions/upload-artifact@v2
          with:
            name: exporter-macos
            path: exporter-darwin-*.zip

        - name: Upload artifacts linux
          if: matrix.os == 'ubuntu-latest'
          uses: actions/upload-artifact@v2
          with:
            name: exporter-linux
            path: exporter-linux-amd64.tar.gz

        - name: Upload artifacts windows
          if: matrix.os == 'ubuntu-latest'
          uses: actions/upload-artifact@v2
          with:
            name: exporter-windows
            path: exporter-windows-amd64.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Download package windows
        uses: actions/download-artifact@v2
        with:
          name: exporter-windows

      - name: Download package linux
        uses: actions/download-artifact@v2
        with:
          name: exporter-linux

      - name: Download package macos
        uses: actions/download-artifact@v2
        with:
          name: exporter-macos

      - name: Create Release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            exporter*.zip
            exporter*.tar.gz
